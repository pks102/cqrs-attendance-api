server:
  port: 8088

logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

spring:
  application:
    name: QUERY-SERVICE
  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    show-sql: true
    hibernate:
      ddl-auto: update
  datasource:
    url: jdbc:mysql://${MYSQL_HOST:mysqldb}:${MYSQL_PORT:3306}/attendance?createDatabaseIfNotExist=true
    username: ${MYSQL_USER:root}
    password: ${MYSQL_PASSWORD:root}
  kafka:
    topic: AttendanceEvents
    listener:
      ack-mode: MANUAL_IMMEDIATE
      poll-timeout: 900000
    consumer:
      group-id: attendanceConsumer
      auto-offset-reset: earliest
      bootstrap-servers: kafka:9092
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: '*'
  zipkin:
    baseUrl: http://zipkin:9411
eureka:
  instance:
    prefer-ip-address: true
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka
  endpoints:
    web:
      exposure:
        include: health,info,prometheus

  endpoint:
    health:
      show-details: always
management:
  tracing:
    sampling:
      probability: 1.0